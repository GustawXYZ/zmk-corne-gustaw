/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB     &kp Q  &kp W  &kp E      &kp R      &kp T           &kp Y  &kp U     &kp I      &kp O    &kp P     &sl 2
&kp ESCAPE  &kp A  &kp S  &kp D      &kp F      &kp G           &kp H  &kp J     &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT   &kp Z  &kp X  &kp C      &kp V      &kp B           &kp N  &kp M     &kp COMMA  &kp DOT  &kp FSLH  &kp RSHIFT
                          &kp LCTRL  &kp SPACE  &mt LGUI RET    &mo 1  &kp BSPC  &kp RALT
            >;
        };

        lower_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp CAPSLOCK  &kp N1     &kp N2    &kp N3         &kp N4         &kp N5           &kp N6    &kp N7        &kp N8        &kp N9        &kp N0      &kp BSPC
&kp MINUS     &kp EQUAL  &kp LBKT  &kp RBKT       &kp BACKSLASH  &kp GRAVE        &kp LEFT  &kp DOWN      &kp UP        &kp RIGHT     &kp END     &trans
&kp UNDER     &kp PLUS   &kp LBRC  &kp RBRC       &kp PIPE       &kp TILDE        &kp HOME  &kp C_PP      &kp C_VOL_DN  &kp C_VOL_UP  &kp C_PREV  &kp C_NEXT
                                   &kp LG(SPACE)  &kp LA(SPACE)  &kp LG(ENTER)    &trans    &sk LC(LGUI)  &kp LALT
            >;
        };

        raise_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB       &kp EXCL      &kp AT        &kp HASH      &kp DLLR      &kp PRCNT     &kp CARET      &kp AMPS       &kp KP_MULTIPLY  &kp LPAR       &kp RPAR    &kp BSPC
&to 0         &kp LG(N1)    &kp LG(N2)    &kp LG(N3)    &kp LG(N4)    &kp LG(N5)    &kp LG(N6)     &kp LG(N7)     &kp LG(N8)       &kp LG(N9)     &kp LG(N0)  &trans
&bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR    &kp LS(LA(H))  &kp LS(LA(J))  &kp LA(LS(K))    &kp LS(LA(L))  &trans      &trans
                                          &trans        &trans        &trans        &trans         &trans         &trans
            >;
        };

        layer_3 {
            bindings = <
&kp F12  &kp F1  &kp F2  &kp F3  &kp F4  &kp F5    &kp F6  &kp F7  &kp F8  &kp F9  &kp F10  &kp F11
&to 0    &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans   &trans
&trans   &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans   &trans
                         &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };
    };
};
