/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/led/led.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&pinctrl {
    spi3_default: spi3_default {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 6)>;
        };
    };

    spi3_sleep: spi3_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 6)>;
            low-power-enable;
        };
    };
};

&spi3 {
    compatible = "nordic,nrf-spim";
    status = "okay";
    pinctrl-0 = <&spi3_default>;
    pinctrl-1 = <&spi3_sleep>;
    pinctrl-names = "default", "sleep";

    led_strip: ws2812@0 {
        compatible = "worldsemi,ws2812-spi";
        label = "WS2812";

        /* SPI */

        reg = <0>; /* ignored, but necessary for SPI bindings */
        spi-max-frequency = <4000000>;

        /* WS2812 */

        chain-length = <27>; /* arbitrary; change at will */
        spi-one-frame = <0x70>;
        spi-zero-frame = <0x40>;
        color-mapping = <LED_COLOR_ID_GREEN LED_COLOR_ID_RED LED_COLOR_ID_BLUE>;
    };
};

/ {
    chosen {
        zmk,underglow = &led_strip;
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB     &kp Q  &kp W  &kp E      &kp R           &kp T           &kp Y  &kp U  &kp I      &kp O    &kp P     &kp BSPC
&kp ESCAPE  &kp A  &kp S  &kp D      &kp F           &kp G           &kp H  &kp J  &kp K      &kp L    &kp SEMI  &kp SQT
&kp LSHFT   &kp Z  &kp X  &kp C      &kp V           &kp B           &kp N  &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp RSHIFT
                          &kp LCTRL  &mt LALT SPACE  &mt LGUI RET    &mo 1  &mo 2  &kp RALT
            >;

            label = "def";
        };

        move_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp CAPSLOCK  &trans  &trans    &trans         &trans         &trans           &kp LC(LEFT)  &kp LC(DOWN)  &kp LC(UP)           &kp LC(RIGHT)  &trans      &kp DEL
&to 0         &trans  &kp BSLH  &kp MINUS      &kp PLUS       &kp GRAVE        &kp LEFT      &kp DOWN      &kp UP               &kp RIGHT      &kp END     &kp PSCRN
&trans        &trans  &kp PIPE  &kp UNDER      &kp EQUAL      &kp TILDE        &kp HOME      &kp C_PP      &mt K_MUTE C_VOL_DN  &kp C_VOL_UP   &kp C_PREV  &kp C_NEXT
                                &kp LG(SPACE)  &kp LA(SPACE)  &kp LG(ENTER)    &trans        &to 3         &kp LALT
            >;

            label = "mov";
        };

        number_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB  &trans    &kp LPAR   &kp STAR   &kp AMPS  &kp LBRC    &kp RBRC  &kp N7  &kp N8  &kp N9  &trans  &to 4
&to 0    &kp RPAR  &kp CARET  &kp PRCNT  &kp DLLR  &kp LPAR    &kp RPAR  &kp N4  &kp N5  &kp N6  &kp N0  &trans
&trans   &trans    &kp HASH   &kp AT     &kp EXCL  &kp LBKT    &kp RBKT  &kp N1  &kp N2  &kp N3  &trans  &trans
                              &trans     &trans    &trans      &mo 3     &trans  &trans
            >;

            label = "num";
        };

        os_layer {
            bindings = <
&kp F1  &kp F2  &kp F3  &kp F4   &kp F5   &kp F6     &trans  &kp LG(N7)  &kp LG(N8)  &kp LG(N9)  &trans  &trans
&to 0   &trans  &trans  &trans   &trans   &trans     &trans  &kp LG(N4)  &kp LG(N5)  &kp LG(N6)  &trans  &trans
&kp F7  &kp F8  &kp F9  &kp F10  &kp F11  &kp F12    &trans  &kp LG(N1)  &kp LG(N2)  &kp LG(N3)  &trans  &trans
                        &trans   &trans   &trans     &trans  &trans      &trans
            >;

            label = "os";
        };

        config_layer {
            bindings = <
&trans           &trans           &trans           &trans           &trans           &trans             &trans        &trans        &trans        &trans        &trans             &trans
&to 0            &rgb_ug RGB_EFF  &rgb_ug RGB_BRI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_SPI    &trans        &trans        &trans        &trans        &ext_power EP_OFF  &ext_power EP_ON
&rgb_ug RGB_TOG  &rgb_ug RGB_EFR  &rgb_ug RGB_BRD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_SPD    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4       &bt BT_CLR
                                                   &trans           &trans           &trans             &trans        &trans        &trans
            >;

            label = "conf";
        };
    };
};
