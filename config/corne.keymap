/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/led/led.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

&pinctrl {
    spi3_default: spi3_default {
        group1 { psels = <NRF_PSEL(SPIM_MOSI, 0, 6)>; };
    };

    spi3_sleep: spi3_sleep {
        group1 {
            psels = <NRF_PSEL(SPIM_MOSI, 0, 6)>;
            low-power-enable;
        };
    };
};

&spi3 {
    compatible = "nordic,nrf-spim";
    status = "okay";
    pinctrl-0 = <&spi3_default>;
    pinctrl-1 = <&spi3_sleep>;
    pinctrl-names = "default", "sleep";

    led_strip: ws2812@0 {
        compatible = "worldsemi,ws2812-spi";
        label = "WS2812";

        /* SPI */

        reg = <0>; /* ignored, but necessary for SPI bindings */
        spi-max-frequency = <4000000>;

        /* WS2812 */

        chain-length = <27>; /* arbitrary; change at will */
        spi-one-frame = <0x70>;
        spi-zero-frame = <0x40>;
        color-mapping = <LED_COLOR_ID_GREEN LED_COLOR_ID_RED LED_COLOR_ID_BLUE>;
    };
};

/ {
    behaviors {
        bhm: balanced_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;    // <---[[moderate duration]]
            quick-tap-ms = <0>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
    };
};

/ {
    chosen { zmk,underglow = &led_strip; };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&kp TAB     &kp Q  &kp W         &kp E        &kp R        &kp T    &kp Y  &kp U        &kp I        &kp O         &kp P     &kp BSPC
&kp ESCAPE  &kp A  &bhm LCTRL S  &bhm LGUI D  &bhm LALT F  &kp G    &kp H  &bhm LALT J  &bhm LGUI K  &bhm LCTRL L  &kp SEMI  &kp SQT
&kp LSHFT   &kp Z  &kp X         &kp C        &kp V        &kp B    &kp N  &kp M        &kp COMMA    &kp DOT       &kp FSLH  &kp RSHIFT
                                 &mo 3        &kp SPACE    &mo 2    &mo 1  &kp RET      &kp RALT
            >;

            label = "def";
        };

        move_layer {
            bindings = <
&trans  &kp BSLH  &kp N7  &kp N8  &kp N9  &kp MINUS    &kp LC(LEFT)  &kp LC(DOWN)  &kp LC(UP)           &kp LC(RIGHT)  &trans      &kp DEL
&to 0   &kp DOT   &kp N4  &kp N5  &kp N6  &kp N0       &kp LEFT      &kp DOWN      &kp UP               &kp RIGHT      &kp END     &kp PSCRN
&trans  &trans    &kp N1  &kp N2  &kp N3  &kp COMMA    &kp HOME      &kp C_PP      &mt K_MUTE C_VOL_DN  &kp C_VOL_UP   &kp C_PREV  &kp C_NEXT
                          &trans  &kp N0  &to 5        &trans        &trans        &trans
            >;

            label = "mov";
        };

        number_layer {
            bindings = <
&kp CAPS  &trans     &trans     &kp LBRC  &kp RBRC  &trans       &trans    &kp AMPS         &kp STAR   &kp LPAR   &trans    &trans
&to 0     &kp PLUS   &kp MINUS  &kp LPAR  &kp RPAR  &kp GRAVE    &kp BSLH  &kp DLLR         &kp PRCNT  &kp CARET  &kp RPAR  &to 4
&trans    &kp EQUAL  &kp UNDER  &kp LBKT  &kp RBKT  &kp TILDE    &kp PIPE  &kp EXCLAMATION  &kp AT     &kp HASH   &trans    &trans
                                &trans    &trans    &trans       &to 5     &trans           &trans
            >;

            label = "num";
        };

        os_layer {
            bindings = <
&kp LC(LG(Q))  &kp F1  &kp LG(N7)  &kp LG(N8)  &kp LG(N9)  &kp F4    &kp F7  &kp LG(LS(N7))  &kp LG(LS(N8))  &kp LG(LS(N9))  &kp F10  &trans
&to 0          &kp F2  &kp LG(N4)  &kp LG(N5)  &kp LG(N6)  &kp F5    &kp F8  &kp LG(LS(N4))  &kp LG(LS(N5))  &kp LG(LS(N6))  &kp F11  &trans
&kp LC(LG(W))  &kp F3  &kp LG(N1)  &kp LG(N2)  &kp LG(N3)  &kp F6    &kp F9  &kp LG(LS(N1))  &kp LG(LS(N2))  &kp LG(LS(N3))  &kp F12  &trans
                                   &trans      &trans      &trans    &trans  &trans          &trans
            >;

            label = "os";
        };

        config_layer {
            bindings = <
&trans           &trans           &trans           &trans           &trans           &trans             &trans        &trans        &trans        &trans        &trans             &trans
&to 0            &rgb_ug RGB_EFF  &rgb_ug RGB_BRI  &rgb_ug RGB_SAI  &rgb_ug RGB_HUI  &rgb_ug RGB_SPI    &trans        &trans        &trans        &trans        &ext_power EP_OFF  &ext_power EP_ON
&rgb_ug RGB_TOG  &rgb_ug RGB_EFR  &rgb_ug RGB_BRD  &rgb_ug RGB_SAD  &rgb_ug RGB_HUD  &rgb_ug RGB_SPD    &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4       &bt BT_CLR
                                                   &trans           &trans           &trans             &trans        &trans        &trans
            >;

            label = "conf";
        };

        gaming {
            bindings = <
&kp ESC  &kp TAB    &kp Q  &kp W  &kp E      &kp R    &kp Y  &kp U  &kp I      &kp O    &kp P     &kp BSPC
&to 0    &kp LSHFT  &kp A  &kp S  &kp D      &kp F    &kp H  &kp J  &kp K      &kp L    &kp SEMI  &kp APOS
&kp G    &kp LCTRL  &kp Z  &kp X  &kp C      &kp V    &kp N  &kp M  &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                           &kp T  &kp SPACE  &mo 6    &mo 7  &kp B  &kp GRAVE
            >;

            label = "game";
        };

        gaming_numbers {
            bindings = <
&kt S      &kt W      &kp N1  &kp N7     &kp N2  &kp I     &trans  &trans  &trans  &trans  &trans  &trans
&kt LSHFT  &kp ENTER  &kp N3  &kp N8     &kp N4  &kp H     &trans  &trans  &trans  &trans  &trans  &trans
&kt A      &kt D      &kp N5  &kp N9     &kp N6  &kp M     &trans  &trans  &trans  &trans  &trans  &trans
                              &kt LCTRL  &trans  &trans    &trans  &trans  &trans
            >;

            label = "game_num";
        };

        gaming_qwerty {
            bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R      &kp T        &kp Y   &kp U   &kp I      &kp O    &kp P     &kp BSPC
&kp ESC    &kp A  &kp S  &kp D     &kp F      &kp G        &kp H   &kp J   &kp K      &kp L    &kp SEMI  &kp APOS
&kp LSHFT  &kp Z  &kp X  &kp C     &kp V      &kp B        &kp N   &kp M   &kp COMMA  &kp DOT  &kp FSLH  &kp RSHFT
                         &kp RALT  &kp SPACE  &kp ENTER    &trans  &trans  &trans
            >;

            label = "game_qwe";
        };
    };
};
